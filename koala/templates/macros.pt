<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:tal="http://xml.zope.org/namespaces/tal">
<head>
    <title>Macros</title>
</head>
<body>

<h1>Reusable macros</h1>

<p>Documentation:
    <a href="http://docs.pylonsproject.org/projects/pyramid_tutorials/en/latest/humans/creatingux/step10/index.html">
        Reusable Template Macros
    </a>
</p>

<!-- Filter form for landing pages =====
     Expects the view to pass a 'filter_fields' list of models.LandingPageFilter() objects. -->
<metal:properties_filter_form metal:define-macro="properties_filter_form">
    <h6>Filters</h6>
    <form class="custom" id="properties-filter-form">
        <div class="match-condition">
            Match <input type="radio" name="anyall" value="all" checked="checked" /> all
            <input type="radio" name="anyall" value="any" /> any
        </div>
        <div tal:repeat="field filter_fields">
            <input type="text" tal:condition="not field.choices" placeholder="${field.name}" />
            <select tal:condition="field.choices" placeholder="${field.name}">
                <option tal:repeat="choice field.choices" name="${field.key}" value="choice">${choice}</option>
            </select>
        </div>
    </form>
</metal:properties_filter_form>


<!-- Landing page datagrid macro =====
     TODO: Incorporate table view; only the grid view is implemented for now -->
<metal:datagrid_macro metal:define-macro="landing_page_datagrid">
    <div class="large-10 columns datagrid" id="landing-page-items"
         ng-controller="ItemsCtrl" ng-init="getItems('${json_items_endpoint}')">
        <div class="row sort-search" ng-cloak="cloak">
            <div class="small-5 columns">
                <div metal:define-slot="sorting_controls"></div>
            </div>
            <div class="small-4 columns search-filter">
                <form class="custom" ng-submit="searchFilterItems(${filter_keys})" metal:define-slot="search_controls">
                    <div class="row collapse">
                        <div class="small-10 columns">
                            <input type="search" ng-model="searchFilter" id="search-filter" placeholder="filter..." />
                        </div>
                        <div class="small-2 columns">
                            <button class="button secondary postfix">Go</button>
                        </div>
                    </div>
                </form>
            </div>
            <div class="small-3 columns right" ng-show="!itemsLoading" ng-cloak="cloak" metal:define-slot="results_count">
                {{ items.length }} <span class="hide-for-small">items</span> found
            </div>
        </div>
        <div ng-show="itemsLoading">Loading...</div>
        <div class="tile item" ng-repeat="item in items | orderBy: sortBy" ng-cloak="true">
            <div class="header">
                <strong>{{ item.instance_name }}</strong>
                <span class="tiny secondary button dropdown right"
                      data-dropdown="item-dropdown_{{ $index }}"><i class="fi-widget"></i></span>
                <ul id="item-dropdown_{{ $index }}" class="f-dropdown">
                    <metal:block metal:define-slot="dropdown-items">
                        <li><a href="#">This is a link</a></li>
                        <li><a href="#">This is another</a></li>
                        <li><a href="#">Yet another</a></li>
                    </metal:block>
                </ul>
            </div>
            <div class="content">
                <div metal:define-slot="tile_content"></div>
            </div>
            <div class="footer status {{ item.status | lowercase }}">{{ item.status }}</div>
        </div>
    </div>
</metal:datagrid_macro>

</body>
</html>
