<metal:block use-macro="main_template">

<div metal:fill-slot="main_content">
    <div class="row" id="contentwrap"
            tal:define="html_attrs {'disabled': 'disabled'} if keypair else {};">
        <h3 class="header" id="pagetitle">
            <metal:breadcrumbs metal:use-macro="layout.global_macros['breadcrumbs']">
                <metal:crumbs metal:fill-slot="crumbs">
                    <li><a href="${request.route_url('keypairs')}" i18n:translate="">Key Pairs</a></li>
                    <li class="current">
                        <a tal:condition="keypair">${keypair.name }</a>
                        <a tal:condition="not keypair and keypair_route_id == 'new'" i18n:translate="">Create new keypair</a>
                        <a tal:condition="not keypair and keypair_route_id == 'new2'" i18n:translate="">Import public key</a>
                    </li>
                </metal:crumbs>
            </metal:breadcrumbs>
        </h3>
        <!-- Notifications -->
        <metal:block metal:use-macro="layout.global_macros['notifications']" />

        <!-- New Keypair Material Download -->
        <div tal:condition="keypair_created ">
           <form id="download-keypair-form" action="${request.route_url('keypair_download')}" method="post">
               ${structure:keypair_form['csrf_token']}
           </form>
           <script language="Javascript">
               function trigger(){ 
                  setTimeout(function(){ $("#download-keypair-form").submit(); }, 1000); // download the keypair material 1 second after.
               }
               trigger();
           </script>
        </div>

        <div class="large-7 columns">
            <div class="panel no-title">
                <div tal:condition="keypair">
                    <div class="row controls-wrapper readonly">
                        <div class="small-3 columns"><label i18n:translate="">Name</label></div>
                        <div class="small-9 columns value">${keypair.name if keypair.name else ''}</div>
                    </div>
                    <div class="row controls-wrapper readonly">
                        <div class="small-3 columns"><label i18n:translate="">Fingerprint</label></div>
                        <div class="small-9 columns value">${keypair.fingerprint if keypair.fingerprint else ''}</div>
                    </div>
                </div>
                <div tal:condition="not keypair and keypair_route_id == 'new'" i18n:translate="">
                    <p i18n:translate="">You can use this key pair to launch more than one instance.</p>
                    <p i18n:translate="">
                        Save the file in a place you will remember. You will need to enter the path later to connect to your instances.
                    </p>
                    <form  action="${request.route_url('keypair_create')}" method="post" data-abide="abide">
                        ${structure:keypair_form['csrf_token']}
                        ${panel('form_field', field=keypair_form['name'], leftcol_width=3, rightcol_width=9, **html_attrs)}
                        <hr>
                    <div class="row">
                        <div class="small-3 columns">&nbsp;</div>
                        <div class="small-9 columns field inline">
                            <button type="submit" class="button" i18n:translate="">Create and download</button>
                            <a href="${request.route_url('keypairs')}"
                               class="cancel-link" i18n:translate="">Cancel</a>
                        </div>
                    </div>
                     </form>
                 </div>
                <div tal:condition="not keypair and keypair_route_id == 'new2'" i18n:translate="">
                    <p i18n:translate="">Importing a public key allows you to use an existing SSH key to access your Eucalyptus instances.</p>
                    <form action="${request.route_url('keypair_import')}" method="post" data-abide="abide">
                        ${structure:keypair_import_form['csrf_token']}
                        ${panel('form_field', field=keypair_import_form['name'], leftcol_width=3, rightcol_width=9, **html_attrs)}
                        ${panel('form_field', field=keypair_import_form['key_material'], leftcol_width=3, rightcol_width=9, **html_attrs)}
                        <div class="row">
                            <div class="small-3 columns">&nbsp;</div>
                            <div class="small-9 columns">
                                <label for="key-import-file">Or: </label>
                                <input type="file" id="key-import-file"/>
                            </div>
                        </div>
                        <div class="row controls-wrapper readonly" tal:condition="keypair">
                            <div class="small-3 columns"><label i18n:translate="">Fingerprint</label></div>
                            <div class="small-9 columns value">${keypair.fingerprint if keypair.fingerprint else ''}</div>
                        </div>
                        <hr/>
                        <div class="row" tal:condition="not keypair">
                            <div class="small-3 columns">&nbsp;</div>
                            <div class="small-9 columns field inline">
                                <button type="submit" class="button">Import</button>
                                <a href="${request.route_url('keypairs')}"
                                   class="cancel-link" i18n:translate="">Cancel</a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="large-5 columns">
            <div class="panel other-actions" tal:condition="keypair">
                <a class="button secondary delete" data-reveal-id="delete-keypair-modal" i18n:translate="">
                    Delete keypair
                </a>
            </div>
            <div class="help-content">
                <div tal:condition="keypair" tal:omit-tag="">
                    <h5 class="title" i18n:translate="">Delete Key Pair</h5>
                    <p i18n:translate="">This dialog box allows you to confirm or cancel a key pair delete operation.</p>
                    <h5 class="title" i18n:translate="">Verify Key Pair Deletion</h5>
                    <ol>
                        <li>
                            To verify that you wish to delete the selected key pair(s), click the <strong>Yes, delete</strong> button.
                        </li>
                        <li>
                            To cancel the delete operation, click the <strong>Cancel</strong> button.
                        </li>
                    </ol>
                </div>
                <div tal:condition="not keypair and keypair_route_id == 'new'" tal:omit-tag="">
                    <h5 class="title" i18n:translate="">Create a Key Pair</h5>
                    <p i18n:translate="">
                        Eucalyptus uses cryptographic key pairs to verify access to instances. Before you can run an instance, you must create a key pair. Creating a key pair generates two keys: a public key (saved within Eucalyptus) and a corresponding private key (output to the user as a character string). To enable this private key you must save it to a file and set appropriate access permissions (using the chmod command), as shown in the example below. 
                    </p>
                    <p i18n:translate="">
                        When you create a VM instance, the public key is then injected into the VM. Later, when attempting to login to the VM instance using SSH, the public key is checked against your private key to verify access. Note that the private key becomes obsolete when the public key is deleted.
                    </p> 
                    <h5 class="title" i18n:translate="">Create Key Pairs with the Console</h5>
                    <ol>
                        <li> 
                            From the main dashboard screen, click the <strong>Key Pairs</strong> link in the <strong>Network and Security</strong> section, or select the Network and Security submenu from the Manage Resources navigation menu. The <strong>Manage Keypairs</strong> screen will appear.
                        </li>
                        <li>
                            On the <strong>Manage Key Pairs</strong> screen, click the <strong>Create new key pair</strong> link. The <strong>Create New Key Pair</strong> dialog will appear.
                        </li>
                        <li>
                            Type a name for the new key pair into the <strong>Name</strong> text box.
                        </li>
                        <li>
                            Click the <strong>Create and Download</strong> button. The private half of the key pair is saved to the default download location for your browser.
                            <br>
                            Note: Keep your private key file in a safe place. If you lose it, you will be unable to access instances created with the key pair.
                        </li>
                        <li>
                            Change file permissions to enable access to the private key file in the local directory. For example, on a Linux or Mac OS X system:
                            <br>
                            <code>chmod 0600 &lt;keypair_name&gt;.private</code>
                        </li>
                    </ol>
                </div>
                <div tal:condition="not keypair and keypair_route_id == 'new2'" tal:omit-tag="">
                    <h5 class="title" i18n:translate="">Import a Key Pair</h5>
                    <p i18n:translate="">
                        This dialog box allows you import an existing key pair.
                    </p>
                    <ol>
                        <li>
                            Enter a name for the key pair in the <strong>Name</strong> text box.
                        </li>
                        <li>
                            Paste the contents of your SSH key into the <strong>SSH key contents</strong> text box, or click on the <strong>Browse to file</strong> link to read the contents of an existing SSH key file.
                        </li>
                        <li>
                            Click the <strong>Import</strong> button.
                        </li>
                    </ol>
                </div>
            </div>
        </div>
        <!--! Modal dialogs reused across landing and detail page -->
        ${panel('keypair_dialogs', keypair=keypair, delete_form=delete_form)}
    </div>
</div>

<div metal:fill-slot="tail_js">
    <script src="${request.static_url('koala:static/js/pages/keypair.js')}"></script>
</div>

</metal:block>

